<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FullScale180.SemanticLogging.Elasticsearch</name>
    </assembly>
    <members>
        <member name="M:FullScale180.SemanticLogging.Guard.ArgumentNotNull(System.Object,System.String)">
            <summary>
            Throws <see cref="T:System.ArgumentNullException"/> if the given argument is null.
            </summary>
            <exception cref="T:System.ArgumentNullException"> If tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="argumentName">Name of the argument being tested.</param>
        </member>
        <member name="M:FullScale180.SemanticLogging.Guard.ArgumentNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws an exception if the tested string argument is null or the empty string.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown if string value is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown if the string is empty</exception>
            <param name="argumentValue">Argument value to check.</param>
            <param name="argumentName">Name of argument being checked.</param>
        </member>
        <member name="M:FullScale180.SemanticLogging.Guard.ArgumentGreaterOrEqualThan``1(``0,``0,System.String)">
            <summary>
            Throws an exception if the argumentValue is less than lowerValue.
            </summary>
            <typeparam name="T">A type that implements <see cref="T:System.IComparable"/>.</typeparam>
            <param name="lowerValue">The lower value accepted as valid.</param>
            <param name="argumentValue">The argument value to test.</param>
            <param name="argumentName">Name of the argument.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Validation error.</exception>
        </member>
        <member name="M:FullScale180.SemanticLogging.Guard.ArgumentLowerOrEqualThan``1(``0,``0,System.String)">
            <summary>
            Throws an exception if the argumentValue is great than higherValue.
            </summary>
            <typeparam name="T">A type that implements <see cref="T:System.IComparable"/>.</typeparam>
            <param name="higherValue">The higher value accepted as valid.</param>
            <param name="argumentValue">The argument value to test.</param>
            <param name="argumentName">Name of the argument.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Validation error.</exception>
        </member>
        <member name="M:FullScale180.SemanticLogging.Guard.ArgumentIsValidTimeout(System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Throws an exception if the tested TimeSpam argument is not a valid timeout value.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the argument is not null and is not a valid timeout value.</exception>
            <param name="argumentValue">Argument value to check.</param>
            <param name="argumentName">Name of argument being checked.</param>
        </member>
        <member name="M:FullScale180.SemanticLogging.Guard.ValidDateTimeFormat(System.String,System.String)">
            <summary>
            Validate the date time format.
            </summary>
            <param name="format">The format.</param>
            <param name="argumentName">Name of the argument.</param>
        </member>
        <member name="T:FullScale180.SemanticLogging.Properties.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.ArgumentIsEmptyError">
            <summary>
              Looks up a localized string similar to Argument is empty.
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.ArgumentNotGreaterOrEqualTo">
            <summary>
              Looks up a localized string similar to The size of &apos;{0}&apos; should be greater or equal to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.ArgumentNotLowerOrEqualTo">
            <summary>
              Looks up a localized string similar to The size of &apos;{0}&apos; should be lower or equal to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.InvalidBufferingArguments">
            <summary>
              Looks up a localized string similar to Invalid arguments combination for buffering interval and count. Please specify valid range values for count and interval parameters..
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.InvalidConnectionStringError">
            <summary>
              Looks up a localized string similar to The value does not represent a connection string.
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.InvalidDateTimeFormatError">
            <summary>
              Looks up a localized string similar to The date time format is invalid..
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.InvalidElasticsearchIndexNameError">
            <summary>
              Looks up a localized string similar to The index name must not contain uppercase, whitespace, or any of the following characters \ /*?&quot;&lt;&gt;|.
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.InvalidNavigationPathInFileNameError">
            <summary>
              Looks up a localized string similar to A file name with a relative path is not allowed. Provide only the file name or the full path of the file..
            </summary>
        </member>
        <member name="P:FullScale180.SemanticLogging.Properties.Resource.TimeSpanOutOfRangeError">
            <summary>
              Looks up a localized string similar to The valid range for &apos;{0}&apos; is from 0 to 24.20:31:23.647.
            </summary>
        </member>
        <member name="T:FullScale180.SemanticLogging.Utility.ElasticsearchEventEntrySerializer">
            <summary>
            Converts ElasticsearchLogEntry to JSON formatted Elasticsearch _bulk service index operation
            </summary>
        </member>
        <member name="T:FullScale180.SemanticLogging.Sinks.ElasticsearchSink">
            <summary>
            Sink that asynchronously writes entries to a Elasticsearch server.
            </summary>
        </member>
        <member name="M:FullScale180.SemanticLogging.Sinks.ElasticsearchSink.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.TimeSpan,System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:FullScale180.SemanticLogging.Sinks.ElasticsearchSink"/> class with the specified connection string and table address.
            </summary>
            <param name="instanceName">The name of the instance originating the entries.</param>
            <param name="connectionString">The connection string for the storage account.</param>
            <param name="index">Index name prefix formatted as index-{0:yyyy.MM.DD}.</param>
            <param name="type">Elasticsearch entry type.</param>
            <param name="flattenPayload">Flatten the payload collection when serializing event entries</param>
            <param name="bufferInterval">The buffering interval to wait for events to accumulate before sending them to Elasticsearch.</param>
            <param name="bufferingCount">The buffering event entry count to wait before sending events to Elasticsearch </param>
            <param name="maxBufferSize">The maximum number of entries that can be buffered while it's sending to Windows Azure Storage before the sink starts dropping entries.</param>
            <param name="onCompletedTimeout">Defines a timeout interval for when flushing the entries after an <see cref="M:FullScale180.SemanticLogging.Sinks.ElasticsearchSink.OnCompleted"/> call is received and before disposing the sink.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Normally, calling <see cref="M:System.IDisposable.Dispose"/> on 
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
        </member>
        <member name="M:FullScale180.SemanticLogging.Sinks.ElasticsearchSink.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:FullScale180.SemanticLogging.Sinks.ElasticsearchSink"/> class.
            </summary>
        </member>
        <member name="M:FullScale180.SemanticLogging.Sinks.ElasticsearchSink.OnCompleted">
            <summary>
            Notifies the observer that the provider has finished sending push-based notifications.
            </summary>
        </member>
        <member name="M:FullScale180.SemanticLogging.Sinks.ElasticsearchSink.OnNext(Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry)">
            <summary>
            Provides the sink with new data to write.
            </summary>
            <param name="value">The current entry to write to Windows Azure.</param>
        </member>
        <member name="M:FullScale180.SemanticLogging.Sinks.ElasticsearchSink.OnError(System.Exception)">
            <summary>
            Notifies the observer that the provider has experienced an error condition.
            </summary>
            <param name="error">An object that provides additional information about the error.</param>
        </member>
        <member name="M:FullScale180.SemanticLogging.Sinks.ElasticsearchSink.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:FullScale180.SemanticLogging.Sinks.ElasticsearchSink"/> class.
            </summary>
        </member>
        <member name="M:FullScale180.SemanticLogging.Sinks.ElasticsearchSink.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">A value indicating whether or not the class is disposing.</param>
        </member>
        <member name="M:FullScale180.SemanticLogging.Sinks.ElasticsearchSink.FlushAsync">
            <summary>
            Causes the buffer to be written immediately.
            </summary>
            <returns>The Task that flushes the buffer.</returns>
        </member>
        <member name="T:FullScale180.SemanticLogging.ElasticsearchLog">
            <summary>
            Factories and helpers for using the <see cref="T:FullScale180.SemanticLogging.Sinks.ElasticsearchSink"/>.
            </summary>
        </member>
        <member name="M:FullScale180.SemanticLogging.ElasticsearchLog.LogToElasticsearch(System.IObservable{Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry},System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Int32,System.Int32)">
            <summary>
            Subscribes to an <see cref="T:System.IObservable`1"/> using a <see cref="T:FullScale180.SemanticLogging.Sinks.ElasticsearchSink"/>.
            </summary>
            <param name="eventStream">The event stream. Typically this is an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.ObservableEventListener"/>.</param>
            <param name="instanceName">The name of the instance originating the entries.</param>
            <param name="connectionString">The endpoint address for the Elasticsearch Service.</param>
            <param name="index">Index name prefix formatted as index-{0:yyyy.MM.DD}</param>
            <param name="type">The Elasticsearch entry type</param>
            <param name="flattenPayload">Flatten the payload collection when serializing event entries</param>
            <param name="bufferingInterval">The buffering interval between each batch publishing. Default value is <see cref="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.Buffering.DefaultBufferingInterval"/>.</param>
            <param name="onCompletedTimeout">Defines a timeout interval for when flushing the entries after an <see cref="M:FullScale180.SemanticLogging.Sinks.ElasticsearchSink.OnCompleted"/> call is received and before disposing the sink.</param>
            <param name="bufferingCount">Buffering count to send entries sot Elasticsearch. Default value is <see cref="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.Buffering.DefaultBufferingCount"/></param>
            <param name="maxBufferSize">The maximum number of entries that can be buffered while it's sending to Elasticsearch before the sink starts dropping entries.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Normally, calling <see cref="M:System.IDisposable.Dispose"/> on
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
            <returns>
            A subscription to the sink that can be disposed to unsubscribe the sink and dispose it, or to get access to the sink instance.
            </returns>
        </member>
        <member name="M:FullScale180.SemanticLogging.ElasticsearchLog.CreateListener(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Int32)">
            <summary>
            Creates an event listener that logs using a <see cref="T:FullScale180.SemanticLogging.Sinks.ElasticsearchSink"/>.
            </summary>
            <param name="instanceName">The name of the instance originating the entries.</param>
            <param name="connectionString">The endpoint address for the Elasticsearch Service.</param>
            <param name="index">Index name prefix formatted as index-{0:yyyy.MM.DD}</param>
            <param name="type">The Elasticsearch entry type</param>
            <param name="flattenPayload">Flatten the payload collection when serializing event entries</param>
            <param name="bufferingInterval">The buffering interval between each batch publishing.</param>
            <param name="listenerDisposeTimeout">Defines a timeout interval for the flush operation when the listener is disposed.</param>
            <param name="maxBufferSize">The maximum number of entries that can be buffered while it's sending to Elasticsearch before the sink starts dropping entries.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Calling <see cref="M:System.IDisposable.Dispose"/> on
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
            <returns>
            An event listener that uses <see cref="T:FullScale180.SemanticLogging.Sinks.ElasticsearchSink"/> to log events.
            </returns>
        </member>
    </members>
</doc>
