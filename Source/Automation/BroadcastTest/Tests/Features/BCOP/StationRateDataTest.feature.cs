// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BroadcastTest.Tests.Features.BCOP
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("StationRateDataTest")]
    public partial class StationRateDataTestFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "StationRateDataTest.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "StationRateDataTest", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify user can view rates for a station")]
        [NUnit.Framework.CategoryAttribute("BCOP53")]
        [NUnit.Framework.CategoryAttribute("MANUAL_BCOP154")]
        public virtual void VerifyUserCanViewRatesForAStation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify user can view rates for a station", new string[] {
                        "BCOP53",
                        "MANUAL_BCOP154"});
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("I view the station rate modal for the station \'WPCH-TV 17.1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.When("I view all rates", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Air Time",
                        "Program",
                        "Genre",
                        "Rate 30",
                        "Rate 15",
                        "HH Impressions",
                        "Rating",
                        "Flight"});
            table1.AddRow(new string[] {
                        "M-F 9AM-10AM",
                        "CRIME WATCH DAILY",
                        "",
                        "$15.00",
                        "-",
                        "5.00",
                        "0.20",
                        "2016/09/26 - 2016/12/25"});
            table1.AddRow(new string[] {
                        "M-F 1PM-2PM",
                        "JUDGE MABLEAN",
                        "",
                        "$10.00",
                        "-",
                        "15.80",
                        "0.70",
                        "2016/09/26 - 2016/12/25"});
#line 7
 testRunner.Then("I should see the following rates in the grid", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create rates for a station program")]
        [NUnit.Framework.CategoryAttribute("BCOP67")]
        [NUnit.Framework.CategoryAttribute("BCOP93")]
        [NUnit.Framework.CategoryAttribute("MANUAL_BCOP165")]
        [NUnit.Framework.CategoryAttribute("AUTOTEST_BCOP164_STEP4")]
        public virtual void CreateRatesForAStationProgram()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create rates for a station program", new string[] {
                        "BCOP67",
                        "BCOP93",
                        "MANUAL_BCOP165",
                        "AUTOTEST_BCOP164_STEP4"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I view the station rate modal for the station \'WPCH-TV 17.1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Air Time",
                        "Program",
                        "Genre",
                        "Rate 30",
                        "Rate 15",
                        "HH Impressions",
                        "Rating",
                        "Flight"});
            table2.AddRow(new string[] {
                        "M-F 9AM-10AM",
                        "CRIME WATCH DAILY",
                        "",
                        "$125.00",
                        "-",
                        "5.00",
                        "0.20",
                        "2016/09/26 - 2016/12/25"});
#line 16
 testRunner.When("I create the rates", ((string)(null)), table2, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete rates for a station")]
        [NUnit.Framework.CategoryAttribute("BCOP129")]
        [NUnit.Framework.CategoryAttribute("MANUAL_BCOP164")]
        [NUnit.Framework.CategoryAttribute("AUTOTEST_BCOP164_STEP4")]
        public virtual void DeleteRatesForAStation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete rates for a station", new string[] {
                        "BCOP129",
                        "MANUAL_BCOP164",
                        "AUTOTEST_BCOP164_STEP4"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("I view the station rate modal for the station \'WPCH-TV 17.1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Air Time",
                        "Program",
                        "Genre",
                        "Rate 30",
                        "Rate 15",
                        "HH Impressions",
                        "Rating",
                        "Flight"});
            table3.AddRow(new string[] {
                        "SA 1PM-1:30PM",
                        "LAST MAN STANDING",
                        "",
                        "$150.00",
                        "-",
                        "9.20",
                        "0.40",
                        "2016/09/26 - 2016/12/25"});
#line 26
 testRunner.When("I delete the rates", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Air Time",
                        "Program",
                        "Genre",
                        "Rate 30",
                        "Rate 15",
                        "HH Impressions",
                        "Rating",
                        "Flight"});
            table4.AddRow(new string[] {
                        "SA 1PM-1:30PM",
                        "LAST MAN STANDING",
                        "",
                        "$150.00",
                        "-",
                        "9.20",
                        "0.40",
                        "2016/09/26 - 2016/12/25"});
#line 29
 testRunner.Then("I should no longer see these rates in the grid", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit an existing rate for a station")]
        [NUnit.Framework.CategoryAttribute("BCOP54")]
        [NUnit.Framework.CategoryAttribute("BCOP124")]
        [NUnit.Framework.CategoryAttribute("AUTOTEST_BCOP289_STEP1")]
        public virtual void EditAnExistingRateForAStation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit an existing rate for a station", new string[] {
                        "BCOP54",
                        "BCOP124",
                        "AUTOTEST_BCOP289_STEP1"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
 testRunner.Given("I view the station rate modal for the station \'WPCH-TV 17.1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Air Time",
                        "Program",
                        "Genre",
                        "Rate 30",
                        "Rate 15",
                        "HH Impressions",
                        "Rating",
                        "Flight"});
            table5.AddRow(new string[] {
                        "M-F 9AM-10AM",
                        "CRIME WATCH DAILY",
                        "",
                        "$125.00",
                        "-",
                        "5.00",
                        "0.20",
                        "2016/09/26 - 2016/12/25"});
#line 37
 testRunner.And("I find the following rate to edit", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Air Time",
                        "Program",
                        "Genre",
                        "Rate 30",
                        "Rate 15",
                        "HH Impressions",
                        "Rating",
                        "Flight"});
            table6.AddRow(new string[] {
                        "M-F 9AM-10AM",
                        "CRIME WATCH DAILY",
                        "test",
                        "$135.00",
                        "$100.00",
                        "12.00",
                        "0.30",
                        "2016/09/26 - 2016/12/25"});
#line 40
 testRunner.When("I edit the rate to the following values", ((string)(null)), table6, "When ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
