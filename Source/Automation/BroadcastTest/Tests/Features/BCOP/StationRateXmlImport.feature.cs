// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BroadcastTest.Tests.Features.BCOP
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("RateCardXmlImport")]
    public partial class RateCardXmlImportFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "StationRateXmlImport.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RateCardXmlImport", "\tEnsure basic XML Import has been verified to be functional. ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upload station rate data")]
        [NUnit.Framework.CategoryAttribute("BCOP52")]
        [NUnit.Framework.CategoryAttribute("SMOKE")]
        public virtual void UploadStationRateData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload station rate data", new string[] {
                        "BCOP52",
                        "SMOKE"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on the Rate Card screen with rate data loaded successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "FilePath",
                        "FileName"});
            table1.AddRow(new string[] {
                        "C:\\Users\\bbernstein\\Documents\\Visual Studio 2013\\Projects\\BroadcastAutoTest\\Broad" +
                            "castTest\\Test Data\\Rate Data\\BCOP-52",
                        "Atlanta.WPCH.SYN.avWPCHTV8317325_1.xml"});
#line 9
 testRunner.When("I upload xml file containing new rate data", ((string)(null)), table1, "When ");
#line 12
 testRunner.And("Upload completed successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Air Time",
                        "Program",
                        "Genre",
                        "Rate 30",
                        "Rate 15",
                        "HH Impressions",
                        "Rating",
                        "Flight"});
            table2.AddRow(new string[] {
                        "M-F 9AM-10AM",
                        "CRIME WATCH DAILY",
                        "",
                        "$125.00",
                        "-",
                        "5",
                        "0.20",
                        "2016/09/26 - 2016/12/25"});
#line 13
 testRunner.Then("I should see the following rates for station \'WPCH-TV 17.1\'", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upload and validate all imported station rates using XML")]
        [NUnit.Framework.CategoryAttribute("BCOP52")]
        public virtual void UploadAndValidateAllImportedStationRatesUsingXML()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload and validate all imported station rates using XML", new string[] {
                        "BCOP52"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given("I am on the Rate Card screen with rate data loaded successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "FilePath",
                        "FileName"});
            table3.AddRow(new string[] {
                        "C:\\Users\\bbernstein\\Documents\\Visual Studio 2013\\Projects\\BroadcastAutoTest\\Broad" +
                            "castTest\\Test Data\\Rate Data\\BCOP-52",
                        "Atlanta.WPCH.SYN.avWPCHTV8317325_1.xml"});
#line 21
 testRunner.When("I upload xml file containing new rate data", ((string)(null)), table3, "When ");
#line 24
 testRunner.And("Upload completed successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.Then("I validate all station rates for station \'WPCH-TV 17.1\' in UI using the imported " +
                    "XML", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate all imported station rates using XML")]
        [NUnit.Framework.CategoryAttribute("regression")]
        [NUnit.Framework.CategoryAttribute("BCOP52")]
        public virtual void ValidateAllImportedStationRatesUsingXML()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate all imported station rates using XML", new string[] {
                        "regression",
                        "BCOP52"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given("I am on the Rate Card screen with rate data loaded successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.When("I view the station rate modal for the station \'WPCH-TV 17.1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "FilePath",
                        "FileName"});
            table4.AddRow(new string[] {
                        "C:\\Users\\bbernstein\\Documents\\Visual Studio 2013\\Projects\\BroadcastAutoTest\\Broad" +
                            "castTest\\Test Data\\Rate Data\\BCOP-52",
                        "Atlanta.WPCH.SYN.avWPCHTV8317325_1.xml"});
#line 32
 testRunner.Then("I validate all station rates for this station in UI using the XML", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
